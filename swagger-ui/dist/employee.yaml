swagger: '2.0'
info:
  description: Employee Management REST API
  version: 1.0.0
  title: Spring Boot REST API
  contact:
    name: Ramesh Fadatare
    url: www.javaguides.net
    email: ramesh24fadatare@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:8080'
basePath: /
tags:
  - name: employee-controller
    description: Operations pertaining to employee in Employee Management System
paths:
  /api/v1/employees:
    get:
      tags:
        - employee-controller
      summary: View a list of available employees
      operationId: getAllEmployeesUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: Successfully retrieved list
          schema:
            type: array
            items:
              type: object
        '401':
          description: You are not authorized to view the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
    post:
      tags:
        - employee-controller
      summary: Add an employee
      operationId: createEmployeeUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: employee
          description: Employee object store in database table
          required: true
          schema:
            $ref: '#/definitions/Employee'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Employee'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/v1/employees/{id}':
    get:
      tags:
        - employee-controller
      summary: Get an employee by Id
      operationId: getEmployeeByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: Employee id from which employee object will retrieve
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Employee'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - employee-controller
      summary: Update an employee
      operationId: updateEmployeeUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: Employee Id to update employee object
          required: true
          type: integer
          format: int64
        - in: body
          name: employeeDetails
          description: Update employee object
          required: true
          schema:
            $ref: '#/definitions/Employee'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Employee'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - employee-controller
      summary: Delete an employee
      operationId: deleteEmployeeUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: Employee Id from which employee object will delete from database table
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  Employee:
    type: object
    properties:
      emailId:
        type: string
        description: The employee email id
        allowEmptyValue: false
      firstName:
        type: string
        description: The employee first name
        allowEmptyValue: false
      id:
        type: integer
        format: int64
        description: The database generated employee ID
        allowEmptyValue: false
      lastName:
        type: string
        description: The employee last name
        allowEmptyValue: false
    title: Employee
    description: 'All details about the Employee. '
